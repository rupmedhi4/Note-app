{"ast":null,"code":"var _jsxFileName = \"D:\\\\SHARPENER PROJECT\\\\REACT\\\\NOTE APP\\\\MY_NOTE_APP\\\\src\\\\Context\\\\Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const context = /*#__PURE__*/createContext();\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [isOpeNModal, setIsOpenModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: [isOpeNModal, setIsOpenModal],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"lise/bVl5TRyjNeWnaLxvBDU2yM=\");\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","context","ContextProvider","children","_s","isOpeNModal","setIsOpenModal","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SHARPENER PROJECT/REACT/NOTE APP/MY_NOTE_APP/src/Context/Context.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\n\r\nexport const context = createContext();\r\n\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n    const [isOpeNModal,setIsOpenModal]=useState(false)\r\n\r\n  return (\r\n    <context.Provider \r\n      value={[\r\n        isOpeNModal, setIsOpenModal,\r\n      ]}\r\n    >\r\n      {children}\r\n    </context.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,OAAO,MAAMC,OAAO,gBAAGJ,aAAa,CAAC,CAAC;AAGtC,OAAO,MAAMK,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACR,QAAQ,CAAC,KAAK,CAAC;EAEpD,oBACEE,OAAA,CAACC,OAAO,CAACM,QAAQ;IACfC,KAAK,EAAE,CACLH,WAAW,EAAEC,cAAc,CAC3B;IAAAH,QAAA,EAEDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEvB,CAAC;AAACR,EAAA,CAZWF,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}